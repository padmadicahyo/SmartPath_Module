{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1N3XuuMhQAzfe1mZkEH8ejyg_cNSqBQuM","timestamp":1738060098629}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"8XTktS_OelG6"},"outputs":[],"source":["# Step 1 : Impor library yang diperlukan\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, mean_squared_error"]},{"cell_type":"code","source":["# Step 2 : import data\n","df = pd.read_csv('/content/Dataset Smartpath - harga_rumah.csv')"],"metadata":{"id":"NB-OgLpNepps"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Step 3 : define target (y) and features (X)\n","df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y72N9np0eufY","executionInfo":{"status":"ok","timestamp":1738070346674,"user_tz":-420,"elapsed":399,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"6b09d78d-9d2f-4800-e422-70ec058bae3a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Luas (m2)', 'Jarak ke Pusat Kota (km)', 'Harga Rumah (Rp)'], dtype='object')"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#rename nama kolom\n","df.rename(columns={'Luas (m2)': 'luas', 'Jarak ke Pusat Kota (km)': 'jarak', 'Harga Rumah (Rp)': 'harga'}, inplace=True)"],"metadata":{"id":"zjid0Q3Hh1FX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Wgb7lUkWHS8q","executionInfo":{"status":"ok","timestamp":1738070349976,"user_tz":-420,"elapsed":346,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"edebfdfc-c506-41e2-b711-76ba81aceb97"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    luas  jarak       harga\n","0    100      5  1000000000\n","1     70      2  1200000000\n","2     85      7   700000000\n","3     64      1   850000000\n","4    120      4  1400000000\n","5     90      8  1000000000\n","6    150      6  2000000000\n","7    115      9  1200000000\n","8     75      5   850000000\n","9     80      3   900000000\n","10   100      1  2000000000\n","11    90      2  1400000000\n","12   175      9  1700000000\n","13    70      3  1000000000\n","14   110      5  1300000000\n","15   180      1  2500000000\n","16   200      7  2700000000\n","17   100      6   900000000\n","18    90      8   900000000\n","19    70      5   800000000\n","20    64      9   700000000\n","21    85      8   700000000\n","22    80      2   900000000\n","23    90      1  1000000000\n","24   120      1  1500000000\n","25   150      6  2000000000\n","26   170      4  2200000000\n","27   200      5  3000000000\n","28   175      9  2600000000\n","29    90      4   700000000\n","30   100      5  1300000000\n","31   130      7  1500000000\n","32   120      3  1800000000\n","33   115      1  2000000000\n","34    75      3   800000000\n","35   110      4  2000000000\n","36    90      5   800000000\n","37    70      7   700000000\n","38    64      5   600000000\n","39   180      1  2700000000\n","40   200      4  3000000000\n","41    80      6   800000000\n","42    75      4   900000000\n","43    90      2  1200000000\n","44   100      4  1500000000\n","45   120      5  1700000000\n","46   150      6  2000000000\n","47    90      3  1100000000\n","48    80      5   900000000\n","49   120      3  1400000000"],"text/html":["\n","  <div id=\"df-f71b7f31-ba67-48ec-9ecd-4eb43af8879a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>luas</th>\n","      <th>jarak</th>\n","      <th>harga</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>5</td>\n","      <td>1000000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>70</td>\n","      <td>2</td>\n","      <td>1200000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>85</td>\n","      <td>7</td>\n","      <td>700000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64</td>\n","      <td>1</td>\n","      <td>850000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>120</td>\n","      <td>4</td>\n","      <td>1400000000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>90</td>\n","      <td>8</td>\n","      <td>1000000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>150</td>\n","      <td>6</td>\n","      <td>2000000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>115</td>\n","      <td>9</td>\n","      <td>1200000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>75</td>\n","      <td>5</td>\n","      <td>850000000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>80</td>\n","      <td>3</td>\n","      <td>900000000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>100</td>\n","      <td>1</td>\n","      <td>2000000000</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>90</td>\n","      <td>2</td>\n","      <td>1400000000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>175</td>\n","      <td>9</td>\n","      <td>1700000000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>70</td>\n","      <td>3</td>\n","      <td>1000000000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>110</td>\n","      <td>5</td>\n","      <td>1300000000</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>180</td>\n","      <td>1</td>\n","      <td>2500000000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>200</td>\n","      <td>7</td>\n","      <td>2700000000</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>100</td>\n","      <td>6</td>\n","      <td>900000000</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>90</td>\n","      <td>8</td>\n","      <td>900000000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>70</td>\n","      <td>5</td>\n","      <td>800000000</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>64</td>\n","      <td>9</td>\n","      <td>700000000</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>85</td>\n","      <td>8</td>\n","      <td>700000000</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>80</td>\n","      <td>2</td>\n","      <td>900000000</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>90</td>\n","      <td>1</td>\n","      <td>1000000000</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>120</td>\n","      <td>1</td>\n","      <td>1500000000</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>150</td>\n","      <td>6</td>\n","      <td>2000000000</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>170</td>\n","      <td>4</td>\n","      <td>2200000000</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>200</td>\n","      <td>5</td>\n","      <td>3000000000</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>175</td>\n","      <td>9</td>\n","      <td>2600000000</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>90</td>\n","      <td>4</td>\n","      <td>700000000</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>100</td>\n","      <td>5</td>\n","      <td>1300000000</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>130</td>\n","      <td>7</td>\n","      <td>1500000000</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>120</td>\n","      <td>3</td>\n","      <td>1800000000</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>115</td>\n","      <td>1</td>\n","      <td>2000000000</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>800000000</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>110</td>\n","      <td>4</td>\n","      <td>2000000000</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>90</td>\n","      <td>5</td>\n","      <td>800000000</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>70</td>\n","      <td>7</td>\n","      <td>700000000</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>64</td>\n","      <td>5</td>\n","      <td>600000000</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>180</td>\n","      <td>1</td>\n","      <td>2700000000</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>200</td>\n","      <td>4</td>\n","      <td>3000000000</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>80</td>\n","      <td>6</td>\n","      <td>800000000</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>75</td>\n","      <td>4</td>\n","      <td>900000000</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>90</td>\n","      <td>2</td>\n","      <td>1200000000</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>100</td>\n","      <td>4</td>\n","      <td>1500000000</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>120</td>\n","      <td>5</td>\n","      <td>1700000000</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>150</td>\n","      <td>6</td>\n","      <td>2000000000</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>90</td>\n","      <td>3</td>\n","      <td>1100000000</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>80</td>\n","      <td>5</td>\n","      <td>900000000</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>120</td>\n","      <td>3</td>\n","      <td>1400000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f71b7f31-ba67-48ec-9ecd-4eb43af8879a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f71b7f31-ba67-48ec-9ecd-4eb43af8879a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f71b7f31-ba67-48ec-9ecd-4eb43af8879a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-741cacb9-938e-4514-a1c3-2151f651320d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-741cacb9-938e-4514-a1c3-2151f651320d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-741cacb9-938e-4514-a1c3-2151f651320d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0051b926-c418-4637-a225-4c4a9267b33b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0051b926-c418-4637-a225-4c4a9267b33b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 50,\n  \"fields\": [\n    {\n      \"column\": \"luas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39,\n        \"min\": 64,\n        \"max\": 200,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          100,\n          70,\n          90\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jarak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          9,\n          2,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"harga\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 667361542,\n        \"min\": 600000000,\n        \"max\": 3000000000,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          1000000000,\n          2000000000,\n          800000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["y = df['harga']"],"metadata":{"id":"Ovv35bo3e9Qr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = df[['luas','jarak']]"],"metadata":{"id":"bj6DvkJpe_Fc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Step 4 : train test split\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7)"],"metadata":{"id":"Xd7y155sfBJa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check shape of train and test sample\n","X_train.shape, X_test.shape, y_train.shape, y_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EFL5ijO2fCyw","executionInfo":{"status":"ok","timestamp":1738070356888,"user_tz":-420,"elapsed":4,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"4332158c-03e6-4276-9eb1-07f2caade542"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((35, 2), (15, 2), (35,), (15,))"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Step 5 : select model\n","model = LinearRegression()"],"metadata":{"id":"DS-gonsUfE_P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Step 6 : train or fit model\n","model.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"UyOFFSoFfLXW","executionInfo":{"status":"ok","timestamp":1738070360720,"user_tz":-420,"elapsed":318,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"cd8e4dc1-8613-4127-d893-b49a6b5c5abc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LinearRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Koefisien dan intersep\n","print(f\"Koefisien: {model.coef_}\")\n","print(f\"Intersep: {model.intercept_}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9mxoBGzFfNLK","executionInfo":{"status":"ok","timestamp":1738070364709,"user_tz":-420,"elapsed":358,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"0233e45d-3ec6-4920-eb50-8685af461424"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Koefisien: [ 16600713.88747887 -32591927.87747796]\n","Intersep: -284245308.7644427\n"]}]},{"cell_type":"code","source":["# Step 7 : predict model\n","y_pred = model.predict(X_test)"],"metadata":{"id":"IYo8yYe-fbYr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hYhOCnejfbx1","executionInfo":{"status":"ok","timestamp":1738070371811,"user_tz":-420,"elapsed":366,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"a34d86c0-40d7-46a1-e35b-a5c95ffe290b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1.64570400e+09, 1.54488072e+09, 2.32755227e+09, 8.66079949e+08,\n","       2.40750834e+09, 7.45608452e+08, 2.01031021e+09, 1.41146551e+09,\n","       9.49083518e+08, 9.49083518e+08, 8.12620808e+08, 8.98671877e+08,\n","       1.34323415e+09, 1.17722701e+09, 2.67129126e+09])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Step 8 : model accuracy\n","print(mean_absolute_error(y_test,y_pred))\n","print(mean_absolute_percentage_error(y_test,y_pred))\n","print(mean_squared_error(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wq6Hej92fgtX","executionInfo":{"status":"ok","timestamp":1738070375169,"user_tz":-420,"elapsed":354,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"74fc6602-2657-41d1-957f-cb175b5b1f4b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["236930183.83657205\n","0.16931169979157565\n","1.0168282155118834e+17\n"]}]},{"cell_type":"code","source":["# Step 9 : visualization result\n","plt.scatter(X_test, y_test, color='black', label='Data Asli')\n","plt.plot(X_test, y_pred, color='blue', linewidth=3, label='Regresi Linear')\n","plt.xlabel('Experience Years (Tahun)')\n","plt.ylabel('Salary (Rp)')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"uQ9p7e44flIA","collapsed":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"z_PWie_03ATF","executionInfo":{"status":"ok","timestamp":1738070381757,"user_tz":-420,"elapsed":653,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"976848b4-0d9e-4f0c-b23a-e81d0f1bac5b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    luas  jarak\n","31   130      7\n","45   120      5\n","12   175      9\n","21    85      8\n","26   170      4\n","3     64      1\n","6    150      6\n","35   110      4\n","18    90      8\n","5     90      8\n","1     70      2\n","2     85      7\n","10   100      1\n","23    90      1\n","39   180      1"],"text/html":["\n","  <div id=\"df-170b43af-c5e5-47ad-8945-0435e75ca6c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>luas</th>\n","      <th>jarak</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>31</th>\n","      <td>130</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>120</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>175</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>85</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>170</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>150</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>110</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>90</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>90</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>70</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>85</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>100</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>90</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>180</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-170b43af-c5e5-47ad-8945-0435e75ca6c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-170b43af-c5e5-47ad-8945-0435e75ca6c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-170b43af-c5e5-47ad-8945-0435e75ca6c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-29332459-e841-4aa8-bb62-eeabba1907e1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-29332459-e841-4aa8-bb62-eeabba1907e1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-29332459-e841-4aa8-bb62-eeabba1907e1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c60b258c-3558-41c0-8ccc-237ac51fc6f9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c60b258c-3558-41c0-8ccc-237ac51fc6f9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test","summary":"{\n  \"name\": \"X_test\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"luas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38,\n        \"min\": 64,\n        \"max\": 180,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          100,\n          70,\n          130\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jarak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5,\n          1,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8qe6GDIcBraY","executionInfo":{"status":"ok","timestamp":1738070412573,"user_tz":-420,"elapsed":526,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"4e3c42e4-3f74-47df-ad60-eec8180fa729"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1.64570400e+09, 1.54488072e+09, 2.32755227e+09, 8.66079949e+08,\n","       2.40750834e+09, 7.45608452e+08, 2.01031021e+09, 1.41146551e+09,\n","       9.49083518e+08, 9.49083518e+08, 8.12620808e+08, 8.98671877e+08,\n","       1.34323415e+09, 1.17722701e+09, 2.67129126e+09])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["#mempersiapkan 3d visualisasi\n","x_surf, y_surf = np.meshgrid(np.linspace(X_test.luas.min(), X_test.luas.max(), 100),np.linspace(X_test.jarak.min(), X_test.jarak.max(), 100))\n","onlyX = pd.DataFrame({'luas': x_surf.ravel(), 'jarak': y_surf.ravel()})\n","fittedY=model.predict(onlyX)"],"metadata":{"id":"uOUdmHpvBkm3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fittedY=np.array(fittedY)\n","fittedY"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZDgpVIg4JIU7","executionInfo":{"status":"ok","timestamp":1738072179755,"user_tz":-420,"elapsed":370,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"6bf2e22f-4a85-4b5d-ae29-5ab9d8473512"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7.45608452e+08, 7.65059794e+08, 7.84511135e+08, ...,\n","       2.37165316e+09, 2.39110450e+09, 2.41055584e+09])"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["arrY = np.array(y_pred)"],"metadata":{"id":"t2UPrgvvJ--z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig = plt.figure()\n","ax = fig.add_subplot(projection='3d')\n","ax.scatter(X_test['luas'],X_test['jarak'],y_test,c='red', marker='o', alpha=0.5,label=\"Data asli\")\n","ax.plot_surface(x_surf,y_surf,fittedY.reshape(x_surf.shape), color='b', alpha=0.3,label=\"3D Linear Reggresion\")\n","ax.set_xlabel('Luas')\n","ax.set_ylabel('Jarak')\n","ax.set_zlabel('Harga')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"ADDowElKfprQ","colab":{"base_uri":"https://localhost:8080/","height":415},"executionInfo":{"status":"ok","timestamp":1738072281883,"user_tz":-420,"elapsed":2872,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"30eb2816-76ba-4c0e-8314-75ca60e27748"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}