{"cells":[{"cell_type":"markdown","source":["## 1. Persiapan"],"metadata":{"id":"2B32tb7f1XV-"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"dXD2GpiVjcJI"},"outputs":[],"source":["# import library yang dibutuhkan\n","import sqlite3\n","import pandas as pd"]},{"cell_type":"code","source":["# upload file\n","from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-8K98urpcJer","executionInfo":{"status":"ok","timestamp":1733734054908,"user_tz":-420,"elapsed":21746,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"31b004de-f86d-4716-9d63-2b264884a292"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-cdf0b909-a01d-4f25-8411-493de9cb5554\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-cdf0b909-a01d-4f25-8411-493de9cb5554\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving northwind.db to northwind.db\n"]}]},{"cell_type":"code","source":["# cek versi dari sqlite yang digunakan\n","sqlite3.sqlite_version"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"flmO0G8XlMTe","executionInfo":{"status":"ok","timestamp":1733734054909,"user_tz":-420,"elapsed":20,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"d947c762-d843-4734-ee69-7c62117113ff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'3.37.2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# membuat koneksi ke database\n","db = sqlite3.connect('northwind.db')"],"metadata":{"id":"CYIjx085lQA2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# membuat variabel cursor dari koneksi ke database\n","cursor = db.cursor()"],"metadata":{"id":"vVR9mLfM7krc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# menampilkan tabel - tabel yang ada di database\n","query = \"\"\"\n","SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%';\n","\"\"\""],"metadata":{"id":"tajLq5VRCx5A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# menjalankan query dan menampilkan hasil\n","cursor.execute(query)\n","print(cursor.fetchall())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733734054910,"user_tz":-420,"elapsed":18,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"e9e9495c-03c2-4c3e-8c24-d0fefab9593c","id":"ktl6x-RS7ede"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[('Suppliers',), ('Shippers',), ('Employees',), ('Customers',), ('Orders',), ('Categories',), ('Products',), ('OrderDetails',)]\n"]}]},{"cell_type":"markdown","source":["# 6. STUDY CASE"],"metadata":{"id":"pQxIVfojGFBP"}},{"cell_type":"markdown","source":["Soal 1. Buat CTE dengan mengacu pada data-data berikut:\n","1. Ambil kolom productid, productname pada tabel Products\n","2. Ambil kolom productid, orderid, dan total penjualan (dihitung) pada tabel OrderDetails\n","3. Ambil kolom orderid, orderdate, dan shippeddate pada tabel Orders\n","4. Gabungkan ketiga tabel diatas\n","5. Coba filter dengan order di atas tahun 2014\n","6. Urutkan berdasarkan total penjualan terbesar\n","7. Ambil top 10 saja"],"metadata":{"id":"w7z9UU_w-zVV"}},{"cell_type":"markdown","source":["Soal 2. Dari tabel customers, kelompokkan lah customer berdasarkan benua mereka. Ketentuannya adalah jika negara asal adalah USA atau Canada, maka benuanya adalah North America. Jika berasal dari Argentina, Brazil, Venezuela maka benuanya adalah South America. Selain itu maka benua Eropa. Kemudian hitung jumlah customer dari tiap benua."],"metadata":{"id":"zplcymjXIQ38"}},{"cell_type":"markdown","source":["Soal 3. Dari tabel orders kita juga bisa melihat kapan deadline pengiriman barang berdasarkan kolom RequiredDate, serta kapan kita mengirim barang berdasarkan kolom ShippedDate. Buatlah pengelompokkan untuk melihat apakah pengiriman dilakukan sebelum deadline atau melewati deadline yang ditentukan. (Hint : hitung selisih antara RequiredDate dan ShippedDate. Jika selisihnya positif , maka kelompokkan menjadi 'pengiriman ontime'. Jika negatif, maka kelompokkan sebagai 'pengiriman terlambat!'). Ambil data dari tahun 2016 saja, dan pastikan kolom selisih waktu tidak bernilai null"],"metadata":{"id":"PRqHJJjcJw2C"}},{"cell_type":"markdown","source":["Soal 4. Gunakan tabel berikut:\n","\n","- Orders dengan kolom: OrderID, CustomerID, OrderDate, ShippedDate, ShipCountry.\n","- OrderDetails dengan kolom: OrderID, ProductID, Quantity, UnitPrice.\n","- Customers dengan kolom: CustomerID, CompanyName, Country.\n","- Products dengan kolom: ProductID, ProductName.\n","- Employees dengan kolom: EmployeeID, FirstName, LastName.\n","\n","Tugas:\n","\n","Tentukan 5 pelanggan terbesar berdasarkan total nilai transaksi (TotalTransaction).\n","Catatan: Total transaksi dihitung sebagai (Quantity * UnitPrice) dari tabel OrderDetails.\n","Untuk setiap pelanggan, tambahkan informasi berikut:\n","Nama pelanggan (CompanyName)\n","Negara pelanggan (Country)\n","Total nilai transaksi (TotalTransaction)\n","Nama karyawan (FirstName dan LastName) yang menangani transaksi tersebut.\n","Urutkan hasil berdasarkan TotalTransaction secara menurun."],"metadata":{"id":"fGLpjofNzQrY"}},{"cell_type":"code","source":["query1 = \"\"\"\n","with cte_1 as (\n","  select\n","    od.orderid,\n","    p.productid,\n","    p.productname,\n","    ( od.quantity * od.unitprice ) as Total_Penjualan,\n","    o.orderdate,\n","    o.shippeddate\n","  from Products p\n","  join OrderDetails od on od.productid = p.productid\n","  join Orders o on od.orderid = o.orderid\n","  where o.orderdate > '2014')\n","\n","select * from cte_1\n","order by 4 desc\n","limit 10\n","\n","\"\"\"\n","\n","pd.read_sql_query (query1 , db)"],"metadata":{"id":"063nhsbrzLkI","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1733649001792,"user_tz":-420,"elapsed":386,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"afd761ee-ab70-4517-e614-250cebd5de9a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   orderid  productid              productname  Total_Penjualan  \\\n","0    10865         38            Côte de Blaye          15810.0   \n","1    10981         38            Côte de Blaye          15810.0   \n","2    10353         38            Côte de Blaye          10540.0   \n","3    10417         38            Côte de Blaye          10540.0   \n","4    10889         38            Côte de Blaye          10540.0   \n","5    10424         38            Côte de Blaye          10329.2   \n","6    10897         29  Thüringer Rostbratwurst           9903.2   \n","7    10372         38            Côte de Blaye           8432.0   \n","8    10540         38            Côte de Blaye           7905.0   \n","9    10816         38            Côte de Blaye           7905.0   \n","\n","                 orderdate              shippeddate  \n","0  2016-02-02 04:00:00.000  2016-02-12 00:00:00.000  \n","1  2016-03-27 21:00:00.000  2016-04-02 00:00:00.000  \n","2  2014-11-13 12:00:00.000  2014-11-25 00:00:00.000  \n","3  2015-01-16 07:00:00.000  2015-01-28 00:00:00.000  \n","4  2016-02-16 04:00:00.000  2016-02-23 00:00:00.000  \n","5  2015-01-23 20:00:00.000  2015-01-27 00:00:00.000  \n","6  2016-02-19 18:00:00.000  2016-02-25 00:00:00.000  \n","7  2014-12-04 10:00:00.000  2014-12-09 00:00:00.000  \n","8  2015-05-19 05:00:00.000  2015-06-13 00:00:00.000  \n","9  2016-01-06 22:00:00.000  2016-02-04 00:00:00.000  "],"text/html":["\n","  <div id=\"df-de980072-afe6-46f2-94c9-a6c149371081\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>orderid</th>\n","      <th>productid</th>\n","      <th>productname</th>\n","      <th>Total_Penjualan</th>\n","      <th>orderdate</th>\n","      <th>shippeddate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10865</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>15810.0</td>\n","      <td>2016-02-02 04:00:00.000</td>\n","      <td>2016-02-12 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10981</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>15810.0</td>\n","      <td>2016-03-27 21:00:00.000</td>\n","      <td>2016-04-02 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10353</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>10540.0</td>\n","      <td>2014-11-13 12:00:00.000</td>\n","      <td>2014-11-25 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10417</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>10540.0</td>\n","      <td>2015-01-16 07:00:00.000</td>\n","      <td>2015-01-28 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10889</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>10540.0</td>\n","      <td>2016-02-16 04:00:00.000</td>\n","      <td>2016-02-23 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>10424</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>10329.2</td>\n","      <td>2015-01-23 20:00:00.000</td>\n","      <td>2015-01-27 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>10897</td>\n","      <td>29</td>\n","      <td>Thüringer Rostbratwurst</td>\n","      <td>9903.2</td>\n","      <td>2016-02-19 18:00:00.000</td>\n","      <td>2016-02-25 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>10372</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>8432.0</td>\n","      <td>2014-12-04 10:00:00.000</td>\n","      <td>2014-12-09 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>10540</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>7905.0</td>\n","      <td>2015-05-19 05:00:00.000</td>\n","      <td>2015-06-13 00:00:00.000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10816</td>\n","      <td>38</td>\n","      <td>Côte de Blaye</td>\n","      <td>7905.0</td>\n","      <td>2016-01-06 22:00:00.000</td>\n","      <td>2016-02-04 00:00:00.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de980072-afe6-46f2-94c9-a6c149371081')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de980072-afe6-46f2-94c9-a6c149371081 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de980072-afe6-46f2-94c9-a6c149371081');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-37e2264b-c783-48bd-97fe-df5f059e7194\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37e2264b-c783-48bd-97fe-df5f059e7194')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-37e2264b-c783-48bd-97fe-df5f059e7194 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"orderid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 254,\n        \"min\": 10353,\n        \"max\": 10981,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          10540,\n          10981,\n          10424\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"productid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 29,\n        \"max\": 38,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          29,\n          38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"productname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Th\\u00fcringer Rostbratwurst\",\n          \"C\\u00f4te de Blaye\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Penjualan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2863.3744689323003,\n        \"min\": 7905.0,\n        \"max\": 15810.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          15810.0,\n          10540.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"orderdate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"2015-05-19 05:00:00.000\",\n          \"2016-03-27 21:00:00.000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shippeddate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"2015-06-13 00:00:00.000\",\n          \"2016-04-02 00:00:00.000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["query2  = \"\"\"\n","\n","SELECT * from customers\n","\n","\"\"\"\n","pd.read_sql_query(query2, db)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"ENj39w2-wiqQ","executionInfo":{"status":"ok","timestamp":1733652823442,"user_tz":-420,"elapsed":13,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"5d01d71b-b20a-46af-93ca-64f1d47fa501"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID                         CompanyName              ContactName  \\\n","0       ALFKI                 Alfreds Futterkiste             Maria Anders   \n","1       ANATR  Ana Trujillo Emparedados y helados             Ana Trujillo   \n","2       ANTON             Antonio Moreno Taquería           Antonio Moreno   \n","3       AROUT                     Around the Horn             Thomas Hardy   \n","4       BERGS                  Berglunds snabbköp       Christina Berglund   \n","..        ...                                 ...                      ...   \n","86      WARTH                      Wartian Herkku         Pirkko Koskitalo   \n","87      WELLI              Wellington Importadora            Paula Parente   \n","88      WHITC                White Clover Markets           Karl Jablonski   \n","89      WILMK                         Wilman Kala          Matti Karttunen   \n","90      WOLZA                      Wolski  Zajazd  Zbyszek Piestrzeniewicz   \n","\n","                 ContactTitle                        Address         City  \\\n","0        Sales Representative                  Obere Str. 57       Berlin   \n","1                       Owner  Avda. de la Constitución 2222  México D.F.   \n","2                       Owner                Mataderos  2312  México D.F.   \n","3        Sales Representative                120 Hanover Sq.       London   \n","4         Order Administrator                Berguvsvägen  8        Luleå   \n","..                        ...                            ...          ...   \n","86         Accounting Manager                    Torikatu 38         Oulu   \n","87              Sales Manager             Rua do Mercado, 12      Resende   \n","88                      Owner    305 - 14th Ave. S. Suite 3B      Seattle   \n","89  Owner/Marketing Assistant                  Keskuskatu 45     Helsinki   \n","90                      Owner                ul. Filtrowa 68     Warszawa   \n","\n","   Region PostalCode  Country           Phone             Fax  \n","0    None      12209  Germany     030-0074321     030-0076545  \n","1    None      05021   Mexico    (5) 555-4729    (5) 555-3745  \n","2    None      05023   Mexico    (5) 555-3932            None  \n","3    None    WA1 1DP       UK  (171) 555-7788  (171) 555-6750  \n","4    None   S-958 22   Sweden   0921-12 34 65   0921-12 34 67  \n","..    ...        ...      ...             ...             ...  \n","86   None      90110  Finland      981-443655      981-443655  \n","87     SP  08737-363   Brazil   (14) 555-8122            None  \n","88     WA      98128      USA  (206) 555-4112  (206) 555-4115  \n","89   None      21240  Finland     90-224 8858     90-224 8858  \n","90   None     01-012   Poland   (26) 642-7012   (26) 642-7012  \n","\n","[91 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-fcbbb430-4f50-49c6-b5e2-4b9cdc77667c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>CompanyName</th>\n","      <th>ContactName</th>\n","      <th>ContactTitle</th>\n","      <th>Address</th>\n","      <th>City</th>\n","      <th>Region</th>\n","      <th>PostalCode</th>\n","      <th>Country</th>\n","      <th>Phone</th>\n","      <th>Fax</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ALFKI</td>\n","      <td>Alfreds Futterkiste</td>\n","      <td>Maria Anders</td>\n","      <td>Sales Representative</td>\n","      <td>Obere Str. 57</td>\n","      <td>Berlin</td>\n","      <td>None</td>\n","      <td>12209</td>\n","      <td>Germany</td>\n","      <td>030-0074321</td>\n","      <td>030-0076545</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ANATR</td>\n","      <td>Ana Trujillo Emparedados y helados</td>\n","      <td>Ana Trujillo</td>\n","      <td>Owner</td>\n","      <td>Avda. de la Constitución 2222</td>\n","      <td>México D.F.</td>\n","      <td>None</td>\n","      <td>05021</td>\n","      <td>Mexico</td>\n","      <td>(5) 555-4729</td>\n","      <td>(5) 555-3745</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ANTON</td>\n","      <td>Antonio Moreno Taquería</td>\n","      <td>Antonio Moreno</td>\n","      <td>Owner</td>\n","      <td>Mataderos  2312</td>\n","      <td>México D.F.</td>\n","      <td>None</td>\n","      <td>05023</td>\n","      <td>Mexico</td>\n","      <td>(5) 555-3932</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AROUT</td>\n","      <td>Around the Horn</td>\n","      <td>Thomas Hardy</td>\n","      <td>Sales Representative</td>\n","      <td>120 Hanover Sq.</td>\n","      <td>London</td>\n","      <td>None</td>\n","      <td>WA1 1DP</td>\n","      <td>UK</td>\n","      <td>(171) 555-7788</td>\n","      <td>(171) 555-6750</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BERGS</td>\n","      <td>Berglunds snabbköp</td>\n","      <td>Christina Berglund</td>\n","      <td>Order Administrator</td>\n","      <td>Berguvsvägen  8</td>\n","      <td>Luleå</td>\n","      <td>None</td>\n","      <td>S-958 22</td>\n","      <td>Sweden</td>\n","      <td>0921-12 34 65</td>\n","      <td>0921-12 34 67</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>WARTH</td>\n","      <td>Wartian Herkku</td>\n","      <td>Pirkko Koskitalo</td>\n","      <td>Accounting Manager</td>\n","      <td>Torikatu 38</td>\n","      <td>Oulu</td>\n","      <td>None</td>\n","      <td>90110</td>\n","      <td>Finland</td>\n","      <td>981-443655</td>\n","      <td>981-443655</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>WELLI</td>\n","      <td>Wellington Importadora</td>\n","      <td>Paula Parente</td>\n","      <td>Sales Manager</td>\n","      <td>Rua do Mercado, 12</td>\n","      <td>Resende</td>\n","      <td>SP</td>\n","      <td>08737-363</td>\n","      <td>Brazil</td>\n","      <td>(14) 555-8122</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>WHITC</td>\n","      <td>White Clover Markets</td>\n","      <td>Karl Jablonski</td>\n","      <td>Owner</td>\n","      <td>305 - 14th Ave. S. Suite 3B</td>\n","      <td>Seattle</td>\n","      <td>WA</td>\n","      <td>98128</td>\n","      <td>USA</td>\n","      <td>(206) 555-4112</td>\n","      <td>(206) 555-4115</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>WILMK</td>\n","      <td>Wilman Kala</td>\n","      <td>Matti Karttunen</td>\n","      <td>Owner/Marketing Assistant</td>\n","      <td>Keskuskatu 45</td>\n","      <td>Helsinki</td>\n","      <td>None</td>\n","      <td>21240</td>\n","      <td>Finland</td>\n","      <td>90-224 8858</td>\n","      <td>90-224 8858</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>WOLZA</td>\n","      <td>Wolski  Zajazd</td>\n","      <td>Zbyszek Piestrzeniewicz</td>\n","      <td>Owner</td>\n","      <td>ul. Filtrowa 68</td>\n","      <td>Warszawa</td>\n","      <td>None</td>\n","      <td>01-012</td>\n","      <td>Poland</td>\n","      <td>(26) 642-7012</td>\n","      <td>(26) 642-7012</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>91 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcbbb430-4f50-49c6-b5e2-4b9cdc77667c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fcbbb430-4f50-49c6-b5e2-4b9cdc77667c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fcbbb430-4f50-49c6-b5e2-4b9cdc77667c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b9dbe745-ef96-4a67-a04a-d22778e86efc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9dbe745-ef96-4a67-a04a-d22778e86efc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b9dbe745-ef96-4a67-a04a-d22778e86efc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 91,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 91,\n        \"samples\": [\n          \"LAMAI\",\n          \"FOLIG\",\n          \"OTTIK\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CompanyName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 91,\n        \"samples\": [\n          \"La maison d'Asie\",\n          \"Folies gourmandes\",\n          \"Ottilies K\\u00e4seladen\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContactName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 91,\n        \"samples\": [\n          \"Annette Roulet\",\n          \"Martine Ranc\\u00e9\",\n          \"Henriette Pfalzheim\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContactTitle\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Assistant Sales Representative\",\n          \"Assistant Sales Agent\",\n          \"Sales Representative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 91,\n        \"samples\": [\n          \"1 rue Alsace-Lorraine\",\n          \"184, chauss\\u00e9e de Tournai\",\n          \"Mehrheimerstr. 369\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 69,\n        \"samples\": [\n          \"Campinas\",\n          \"Berlin\",\n          \"Salzburg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"BC\",\n          \"SP\",\n          \"WA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PostalCode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 86,\n        \"samples\": [\n          \"05634-030\",\n          \"12209\",\n          \"82520\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"Germany\",\n          \"Norway\",\n          \"Ireland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 91,\n        \"samples\": [\n          \"61.77.61.10\",\n          \"20.16.10.16\",\n          \"0221-0644327\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fax\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 69,\n        \"samples\": [\n          \"(93) 203 4561\",\n          \"030-0076545\",\n          \"(1) 123-5556\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["Soal 2. Dari tabel customers, kelompokkan lah customer berdasarkan benua mereka. Ketentuannya adalah jika negara asal adalah USA atau Canada, maka benuanya adalah North America. Jika berasal dari Argentina, Brazil, Venezuela maka benuanya adalah South America. Selain itu maka benua Eropa. Kemudian hitung jumlah customer dari tiap benua.\n"],"metadata":{"id":"noSSxjNeweGc"}},{"cell_type":"code","source":["query2  = \"\"\"\n","\n","SELECT COUNT(CustomerID) AS jumlahCustomer,\n","      CASE\n","      WHEN country in ('USA', 'Canada') then 'North America'\n","      WHEN country in ('Argentina', 'Brazil', 'Venezuela') then 'South America'\n","      ELSE 'Eropa'\n","  END as Benua FROM customers\n","group by Benua\n","\n","\n","\"\"\"\n","pd.read_sql_query(query2, db)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"bXUo-IMnwZC4","executionInfo":{"status":"ok","timestamp":1733730748168,"user_tz":-420,"elapsed":434,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"86a97371-729e-442f-ba14-154bd18b86ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   jumlahCustomer          Benua\n","0              59          Eropa\n","1              16  North America\n","2              16  South America"],"text/html":["\n","  <div id=\"df-b528447c-e4fc-47b1-8144-04fafae21732\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>jumlahCustomer</th>\n","      <th>Benua</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>59</td>\n","      <td>Eropa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>16</td>\n","      <td>North America</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16</td>\n","      <td>South America</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b528447c-e4fc-47b1-8144-04fafae21732')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b528447c-e4fc-47b1-8144-04fafae21732 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b528447c-e4fc-47b1-8144-04fafae21732');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f38f6738-20fa-4bdd-bc52-b9edd716f489\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f38f6738-20fa-4bdd-bc52-b9edd716f489')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f38f6738-20fa-4bdd-bc52-b9edd716f489 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"jumlahCustomer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 16,\n        \"max\": 59,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          16,\n          59\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Benua\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Eropa\",\n          \"North America\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["Soal 3. Dari tabel orders kita juga bisa melihat kapan deadline pengiriman barang berdasarkan kolom RequiredDate, serta kapan kita mengirim barang berdasarkan kolom ShippedDate. Buatlah pengelompokkan untuk melihat apakah pengiriman dilakukan sebelum deadline atau melewati deadline yang ditentukan. (Hint : hitung selisih antara RequiredDate dan ShippedDate. Jika selisihnya positif , maka kelompokkan menjadi 'pengiriman ontime'. Jika negatif, maka kelompokkan sebagai 'pengiriman terlambat!'). Ambil data dari tahun 2016 saja, dan pastikan kolom selisih waktu tidak bernilai null"],"metadata":{"id":"PSjg4nYf6cnT"}},{"cell_type":"code","source":["query3  = \"\"\"\n","\n","SELECT orderid,orderdate, requireddate,shippeddate,\n","      CASE\n","      WHEN requireddate >= shippeddate THEN 'Pengiriman Ontime'\n","      WHEN requireddate < shippeddate THEN 'Pengiriman Terlambat'\n","      ELSE 'Belum terkirim'\n","      END as status FROM orders\n","WHERE orderdate like '%2016%'\n","\n","\n","\"\"\"\n","pd.read_sql_query(query3, db)"],"metadata":{"id":"KMWUHMBk6cWj","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1733733285527,"user_tz":-420,"elapsed":367,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"9e6fd88c-235c-4bd9-dac9-c6d1aa097d53"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     OrderID                OrderDate             RequiredDate  \\\n","0      10808  2016-01-01 03:00:00.000  2016-01-29 00:00:00.000   \n","1      10809  2016-01-01 20:00:00.000  2016-01-29 00:00:00.000   \n","2      10810  2016-01-01 17:00:00.000  2016-01-29 00:00:00.000   \n","3      10811  2016-01-02 20:00:00.000  2016-01-30 00:00:00.000   \n","4      10812  2016-01-02 02:00:00.000  2016-01-30 00:00:00.000   \n","..       ...                      ...                      ...   \n","265    11073  2016-05-05 12:00:00.000  2016-06-02 00:00:00.000   \n","266    11074  2016-05-06 01:00:00.000  2016-06-03 00:00:00.000   \n","267    11075  2016-05-06 18:00:00.000  2016-06-03 00:00:00.000   \n","268    11076  2016-05-06 00:00:00.000  2016-06-03 00:00:00.000   \n","269    11077  2016-05-06 17:00:00.000  2016-06-03 00:00:00.000   \n","\n","                 ShippedDate             status  \n","0    2016-01-09 00:00:00.000  Pengiriman Ontime  \n","1    2016-01-07 00:00:00.000  Pengiriman Ontime  \n","2    2016-01-07 00:00:00.000  Pengiriman Ontime  \n","3    2016-01-08 00:00:00.000  Pengiriman Ontime  \n","4    2016-01-12 00:00:00.000  Pengiriman Ontime  \n","..                       ...                ...  \n","265                     None     Belum terkirim  \n","266                     None     Belum terkirim  \n","267                     None     Belum terkirim  \n","268                     None     Belum terkirim  \n","269                     None     Belum terkirim  \n","\n","[270 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-aab3ac45-17ba-403a-b761-34555ec13cd4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>OrderID</th>\n","      <th>OrderDate</th>\n","      <th>RequiredDate</th>\n","      <th>ShippedDate</th>\n","      <th>status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10808</td>\n","      <td>2016-01-01 03:00:00.000</td>\n","      <td>2016-01-29 00:00:00.000</td>\n","      <td>2016-01-09 00:00:00.000</td>\n","      <td>Pengiriman Ontime</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10809</td>\n","      <td>2016-01-01 20:00:00.000</td>\n","      <td>2016-01-29 00:00:00.000</td>\n","      <td>2016-01-07 00:00:00.000</td>\n","      <td>Pengiriman Ontime</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10810</td>\n","      <td>2016-01-01 17:00:00.000</td>\n","      <td>2016-01-29 00:00:00.000</td>\n","      <td>2016-01-07 00:00:00.000</td>\n","      <td>Pengiriman Ontime</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10811</td>\n","      <td>2016-01-02 20:00:00.000</td>\n","      <td>2016-01-30 00:00:00.000</td>\n","      <td>2016-01-08 00:00:00.000</td>\n","      <td>Pengiriman Ontime</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10812</td>\n","      <td>2016-01-02 02:00:00.000</td>\n","      <td>2016-01-30 00:00:00.000</td>\n","      <td>2016-01-12 00:00:00.000</td>\n","      <td>Pengiriman Ontime</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>265</th>\n","      <td>11073</td>\n","      <td>2016-05-05 12:00:00.000</td>\n","      <td>2016-06-02 00:00:00.000</td>\n","      <td>None</td>\n","      <td>Belum terkirim</td>\n","    </tr>\n","    <tr>\n","      <th>266</th>\n","      <td>11074</td>\n","      <td>2016-05-06 01:00:00.000</td>\n","      <td>2016-06-03 00:00:00.000</td>\n","      <td>None</td>\n","      <td>Belum terkirim</td>\n","    </tr>\n","    <tr>\n","      <th>267</th>\n","      <td>11075</td>\n","      <td>2016-05-06 18:00:00.000</td>\n","      <td>2016-06-03 00:00:00.000</td>\n","      <td>None</td>\n","      <td>Belum terkirim</td>\n","    </tr>\n","    <tr>\n","      <th>268</th>\n","      <td>11076</td>\n","      <td>2016-05-06 00:00:00.000</td>\n","      <td>2016-06-03 00:00:00.000</td>\n","      <td>None</td>\n","      <td>Belum terkirim</td>\n","    </tr>\n","    <tr>\n","      <th>269</th>\n","      <td>11077</td>\n","      <td>2016-05-06 17:00:00.000</td>\n","      <td>2016-06-03 00:00:00.000</td>\n","      <td>None</td>\n","      <td>Belum terkirim</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>270 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aab3ac45-17ba-403a-b761-34555ec13cd4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aab3ac45-17ba-403a-b761-34555ec13cd4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aab3ac45-17ba-403a-b761-34555ec13cd4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2e1e023c-0aa9-428e-9a19-f5e2eff29742\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2e1e023c-0aa9-428e-9a19-f5e2eff29742')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2e1e023c-0aa9-428e-9a19-f5e2eff29742 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 270,\n  \"fields\": [\n    {\n      \"column\": \"OrderID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 78,\n        \"min\": 10808,\n        \"max\": 11077,\n        \"num_unique_values\": 270,\n        \"samples\": [\n          10838,\n          10924,\n          10887\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OrderDate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 247,\n        \"samples\": [\n          \"2016-01-21 09:00:00.000\",\n          \"2016-01-05 18:00:00.000\",\n          \"2016-04-07 19:00:00.000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RequiredDate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"2016-03-23 00:00:00.000\",\n          \"2016-03-06 00:00:00.000\",\n          \"2016-04-10 00:00:00.000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShippedDate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 82,\n        \"samples\": [\n          \"2016-02-18 00:00:00.000\",\n          \"2016-01-09 00:00:00.000\",\n          \"2016-02-17 00:00:00.000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Pengiriman Ontime\",\n          \"Pengiriman Terlambat\",\n          \"Belum terkirim\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","source":["Soal 4. Gunakan tabel berikut:\n","\n","- Orders dengan kolom: OrderID, CustomerID, OrderDate, ShippedDate, ShipCountry.\n","- OrderDetails dengan kolom: OrderID, ProductID, Quantity, UnitPrice.\n","- Customers dengan kolom: CustomerID, CompanyName, Country.\n","- Products dengan kolom: ProductID, ProductName.\n","- Employees dengan kolom: EmployeeID, FirstName, LastName.\n","\n","Tugas:\n","\n","Tentukan 5 pelanggan terbesar berdasarkan total nilai transaksi (TotalTransaction).\n","Catatan: Total transaksi dihitung sebagai (Quantity * UnitPrice) dari tabel OrderDetails.\n","Untuk setiap pelanggan, tambahkan informasi berikut:\n","Nama pelanggan (CompanyName)\n","Negara pelanggan (Country)\n","Total nilai transaksi (TotalTransaction)\n","Nama karyawan (FirstName dan LastName) yang menangani transaksi tersebut.\n","Urutkan hasil berdasarkan TotalTransaction secara menurun."],"metadata":{"id":"SA8VHX5qeT6I"}},{"cell_type":"code","source":["query4  = \"\"\"\n","WITH tabelorder AS (\n","  SELECT orderid, employeeid, customerid, orderdate, shippeddate, shipcountry\n","  FROM orders),\n","tabelorderdetails AS (\n","  SELECT\n","    orderid,productid,quantity, unitprice\n","  FROM orderdetails ),\n","tabelcustomers AS (\n","  SELECT\n","    customerid, companyname, country\n","  FROM customers ),\n","tabelproducts AS (\n","  SELECT\n","    productid, productname\n","  FROM products ),\n","tabelemployees AS (\n","  SELECT\n","    employeeid, firstname, lastname\n","  FROM employees )\n","\n","SELECT c.companyname Nama_Pelanggan,\n","      c.country Negara_Pelanggan,\n","      SUM(od.quantity * od.unitprice ) Total_transaksi,\n","      e.firstname || \" \" || e.lastname Nama_Karyawan\n","FROM tabelcustomers c\n","JOIN tabelorder o ON c.customerid = o.customerid\n","JOIN tabelorderdetails od ON o.orderid = od.orderid\n","JOIN tabelemployees e ON o.employeeid = e.employeeid\n","GROUP BY c.customerid\n","ORDER BY 3 DESC\n","\n","\n","\n","\n","\"\"\"\n","pd.read_sql_query(query4, db)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"-8Y4nSUbeWJm","executionInfo":{"status":"ok","timestamp":1733736696188,"user_tz":-420,"elapsed":738,"user":{"displayName":"Padmadi Cahyo Wibowo","userId":"16154250906193287098"}},"outputId":"daea41eb-927e-4081-8b62-25e47387eb27"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Nama_Pelanggan Negara_Pelanggan  Total_transaksi  \\\n","0                      QUICK-Stop          Germany        117483.39   \n","1              Save-a-lot Markets              USA        115673.39   \n","2                    Ernst Handel          Austria        113601.88   \n","3    Hungry Owl All-Night Grocers          Ireland         57317.39   \n","4      Rattlesnake Canyon Grocery              USA         52245.90   \n","..                            ...              ...              ...   \n","84         Galería del gastrónomo            Spain           836.70   \n","85                    North/South               UK           649.00   \n","86  Laughing Bacchus Wine Cellars           Canada           522.50   \n","87           Lazy K Kountry Store              USA           357.00   \n","88     Centro comercial Moctezuma           Mexico           100.80   \n","\n","       Nama_Karyawan  \n","0    Janet Leverling  \n","1     Anne Dodsworth  \n","2      Nancy Davolio  \n","3     Michael Suyama  \n","4     Laura Callahan  \n","..               ...  \n","84    Laura Callahan  \n","85   Janet Leverling  \n","86   Janet Leverling  \n","87     Nancy Davolio  \n","88  Margaret Peacock  \n","\n","[89 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-2e9a72d0-a3b9-4edc-9a83-30dac1f18935\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nama_Pelanggan</th>\n","      <th>Negara_Pelanggan</th>\n","      <th>Total_transaksi</th>\n","      <th>Nama_Karyawan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>QUICK-Stop</td>\n","      <td>Germany</td>\n","      <td>117483.39</td>\n","      <td>Janet Leverling</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Save-a-lot Markets</td>\n","      <td>USA</td>\n","      <td>115673.39</td>\n","      <td>Anne Dodsworth</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ernst Handel</td>\n","      <td>Austria</td>\n","      <td>113601.88</td>\n","      <td>Nancy Davolio</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Hungry Owl All-Night Grocers</td>\n","      <td>Ireland</td>\n","      <td>57317.39</td>\n","      <td>Michael Suyama</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Rattlesnake Canyon Grocery</td>\n","      <td>USA</td>\n","      <td>52245.90</td>\n","      <td>Laura Callahan</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>Galería del gastrónomo</td>\n","      <td>Spain</td>\n","      <td>836.70</td>\n","      <td>Laura Callahan</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>North/South</td>\n","      <td>UK</td>\n","      <td>649.00</td>\n","      <td>Janet Leverling</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>Laughing Bacchus Wine Cellars</td>\n","      <td>Canada</td>\n","      <td>522.50</td>\n","      <td>Janet Leverling</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>Lazy K Kountry Store</td>\n","      <td>USA</td>\n","      <td>357.00</td>\n","      <td>Nancy Davolio</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>Centro comercial Moctezuma</td>\n","      <td>Mexico</td>\n","      <td>100.80</td>\n","      <td>Margaret Peacock</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>89 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e9a72d0-a3b9-4edc-9a83-30dac1f18935')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e9a72d0-a3b9-4edc-9a83-30dac1f18935 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e9a72d0-a3b9-4edc-9a83-30dac1f18935');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8fea7c82-2a86-4c89-9c22-0b235c17b3ab\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8fea7c82-2a86-4c89-9c22-0b235c17b3ab')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8fea7c82-2a86-4c89-9c22-0b235c17b3ab button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 89,\n  \"fields\": [\n    {\n      \"column\": \"Nama_Pelanggan\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 89,\n        \"samples\": [\n          \"Reggiani Caseifici\",\n          \"Princesa Isabel Vinhos\",\n          \"Around the Horn\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Negara_Pelanggan\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"Germany\",\n          \"Portugal\",\n          \"Mexico\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_transaksi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21969.729984062655,\n        \"min\": 100.8,\n        \"max\": 117483.39000000001,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          7555.6,\n          5317.1,\n          13806.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nama_Karyawan\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Robert King\",\n          \"Anne Dodsworth\",\n          \"Margaret Peacock\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"provenance":[{"file_id":"1xs58Slswf3-sbhi0UymKLno17XiQFWQO","timestamp":1733647363443},{"file_id":"1sPU4XZW4oGqr40dvYMES_NsJeAl6vRz-","timestamp":1733617315005},{"file_id":"1t7tVyl2sKCpIYZURGjVpi74_SUnnPJtn","timestamp":1714552773586},{"file_id":"18hiCYw-I568WuhFlcJF8I--vLEuLipOm","timestamp":1696587195479},{"file_id":"1QLNA8DHFTfG3Hu5sFaewShxSxiKrw_Rb","timestamp":1696420397476},{"file_id":"1EqJ5UAPYLuSw8pdjzWzKAxnPO58YNRjP","timestamp":1696411815932},{"file_id":"1APJJbOP_RKqupvbFgYqvBJ2tI7bwyEnd","timestamp":1696248163449},{"file_id":"1qkD_cyKahgEkoJ448d9IcuTwkGMaE2LR","timestamp":1696169958288},{"file_id":"1hNSHtQAmRguy7TbZAE5-3-cxlYsGiYkt","timestamp":1695989027913},{"file_id":"1O7RxVdf0uxGTgGyoYhM-ATDU5sxXLvYS","timestamp":1695805186747},{"file_id":"1Vkt2xXegZ8Z3rwfXV4IREHr2Z1iqxV5e","timestamp":1695647616937}]}},"nbformat":4,"nbformat_minor":0}